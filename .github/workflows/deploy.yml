name: Odoo Infra & Deploy

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action'
        required: true
        default: apply
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform-provision:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
    runs-on: ubuntu-latest
    outputs:
      droplet_ip: ${{ steps.output_droplet_ip.outputs.droplet_ip }}
    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN }}

      - name: Setup SSH agent with private key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var "do_token=${{ secrets.DO_TOKEN }}" -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}"

      - id: output_droplet_ip
        working-directory: ./terraform
        run: echo "::set-output name=droplet_ip::$(terraform output -raw droplet_ip)"

  deploy-odoo:
    runs-on: ubuntu-latest
    needs: [terraform-provision]
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main' ||
      github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN }}

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Get Droplet IP from Terraform Output (if available)
        id: get-ip
        run: |
          if [ -f ./terraform/terraform.tfstate ]; then
            echo "droplet_ip=$(jq -r '.outputs.droplet_ip.value' ./terraform/terraform.tfstate)" >> $GITHUB_OUTPUT
          else
            echo "No terraform state found."
          fi

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ steps.get-ip.outputs.droplet_ip }} << 'EOF'
            set -e
            cd /home/odoo
            git pull origin main
            docker-compose down -v --remove-orphans || true
            docker system prune -af --volumes || true
            docker-compose up --build -d
          EOF

  terraform-destroy:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN }}

      - name: Setup SSH agent with private key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Destroy
        working-directory: ./terraform
        run: terraform destroy -auto-approve -var "do_token=${{ secrets.DO_TOKEN }}" -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}"
