name: Odoo Infra & Deploy

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action'
        required: true
        default: apply
        type: choice
        options:
          - apply
          - destroy

env:
  ANSIBLE_FORCE_COLOR: 1
  ANSIBLE_HOST_KEY_CHECKING: false

jobs:
  terraform-provision:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN }}

      - name: Checkout Ansible submodule
        run: git submodule update --init --recursive

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var "do_token=${{ secrets.DO_TOKEN }}" -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}"

      - name: Save droplet IP to file
        working-directory: ./terraform
        run: terraform output -raw droplet_ip > ../ansible/inventory/production.ini

      - name: Upload terraform state
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: ./terraform
          retention-days: 1

      - name: Upload IP as artifact
        uses: actions/upload-artifact@v4
        with:
          name: droplet-ip
          path: ./terraform/droplet_ip.txt

  ansible-deploy:
    runs-on: ubuntu-latest
    needs: [terraform-provision]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN }}

      - name: Checkout Ansible submodule
        run: git submodule update --init --recursive

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Download droplet IP artifact
        uses: actions/download-artifact@v4
        with:
          name: droplet-ip
          path: ./ansible/inventory/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ansible and dependencies
        run: |
          pip install ansible
          ansible-galaxy collection install -r ansible/requirements.yml

      - name: Validate Ansible inventory
        run: cat ansible/inventory/production.ini

      - name: Run Ansible playbook
        working-directory: ./ansible
        run: ansible-playbook -i inventory/production.ini playbooks/deploy-odoo.yml --user root --extra-vars "project_dir=/home/odoo"

  deploy-on-push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN }}

      - name: Checkout Ansible submodule
        run: git submodule update --init --recursive

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Determine Droplet IP
        id: get-ip
        run: |
          echo "Fetching IP from DigitalOcean API..."
          ip=$(curl -s -H "Authorization: Bearer ${{ secrets.DO_TOKEN }}" \
            "https://api.digitalocean.com/v2/droplets?tag_name=odoo" | \
            jq -r '.droplets[0].networks.v4[] | select(.type=="public") | .ip_address')
          echo "[odoo]" > ansible/inventory/production.ini
          echo "$ip" >> ansible/inventory/production.ini
          echo "ip=$ip" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ansible and dependencies
        run: |
          pip install ansible
          ansible-galaxy collection install -r ansible/requirements.yml

      - name: Run Ansible playbook
        working-directory: ./ansible
        run: ansible-playbook -i inventory/production.ini playbooks/deploy-odoo.yml --user root --extra-vars "project_dir=/home/odoo"

  terraform-destroy:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN }}

      - name: Checkout Ansible submodule
        run: git submodule update --init --recursive

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Download Terraform state
        uses: actions/download-artifact@v4
        with:
          name: terraform-state
          path: ./terraform

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Destroy
        working-directory: ./terraform
        run: terraform destroy -auto-approve -var "do_token=${{ secrets.DO_TOKEN }}" -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}"
